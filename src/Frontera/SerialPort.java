/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontera;
import com.panamahitek.ArduinoException;
import com.panamahitek.PanamaHitek_Arduino;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import jssc.SerialPortException;
/**
 *
 * @author Estudiante
 */
public class SerialPort extends javax.swing.JFrame {

    /**
     * Creates new form SerialPort
     */
    
    PanamaHitek_Arduino arduino;
    
    public SerialPort() {
        initComponents();
        this.setTitle("Computer to Arduino");
        this.setIconImage(new ImageIcon(getClass().getResource("../Image/led-lighting.png")).getImage());
        this.setLocationRelativeTo(null);
        arduino = new PanamaHitek_Arduino();
        inicializacion(false);
        puertosDisponibles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrincipal = new javax.swing.JPanel();
        titleB = new javax.swing.JLabel();
        jPanelComman = new javax.swing.JPanel();
        comandoTF = new javax.swing.JTextField();
        sendB = new javax.swing.JButton();
        jPanelSerialConnection = new javax.swing.JPanel();
        connectB = new javax.swing.JButton();
        puertosSerialesCB = new javax.swing.JComboBox<>();
        jPanelLEDControl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        led1CB = new javax.swing.JCheckBox();
        led2CB = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        led3CB = new javax.swing.JCheckBox();
        commandL = new javax.swing.JLabel();
        LEDControlL = new javax.swing.JLabel();
        serialConectionL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(466, 340));
        setResizable(false);
        setSize(new java.awt.Dimension(451, 340));

        jPanelPrincipal.setBackground(java.awt.Color.white);
        jPanelPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleB.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        titleB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleB.setText("Computer to Arduino");
        jPanelPrincipal.add(titleB, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 20, 390, -1));

        jPanelComman.setBackground(new java.awt.Color(255, 255, 255));
        jPanelComman.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelComman.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jPanelComman.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comandoTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comandoTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        comandoTF.setSelectionColor(new java.awt.Color(0, 0, 0));
        comandoTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                comandoTFKeyTyped(evt);
            }
        });
        jPanelComman.add(comandoTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 80, 30));

        sendB.setText("Send");
        sendB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBActionPerformed(evt);
            }
        });
        jPanelComman.add(sendB, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 60, 80, -1));

        jPanelPrincipal.add(jPanelComman, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 170, 100));

        jPanelSerialConnection.setBackground(new java.awt.Color(255, 255, 255));
        jPanelSerialConnection.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelSerialConnection.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        connectB.setText("Connect");
        connectB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectBActionPerformed(evt);
            }
        });
        jPanelSerialConnection.add(connectB, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 100, -1));

        puertosSerialesCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM1" }));
        jPanelSerialConnection.add(puertosSerialesCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 80, -1));

        jPanelPrincipal.add(jPanelSerialConnection, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 390, 60));

        jPanelLEDControl.setBackground(new java.awt.Color(255, 255, 255));
        jPanelLEDControl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelLEDControl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Led 1");
        jPanelLEDControl.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 60, -1));

        led1CB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        led1CB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                led1CBItemStateChanged(evt);
            }
        });
        jPanelLEDControl.add(led1CB, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        led2CB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        led2CB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                led2CBItemStateChanged(evt);
            }
        });
        jPanelLEDControl.add(led2CB, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Led 2");
        jPanelLEDControl.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 60, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Led 3");
        jPanelLEDControl.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 60, -1));

        led3CB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        led3CB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                led3CBItemStateChanged(evt);
            }
        });
        jPanelLEDControl.add(led3CB, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        jPanelPrincipal.add(jPanelLEDControl, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 200, 70));

        commandL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        commandL.setText("Command");
        jPanelPrincipal.add(commandL, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 20));

        LEDControlL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LEDControlL.setText("LED Control");
        jPanelPrincipal.add(LEDControlL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, 20));

        serialConectionL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        serialConectionL.setText("Serial Connection");
        jPanelPrincipal.add(serialConectionL, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBActionPerformed
        // TODO add your handling code here:
        if(comandoTF.getText().equals("LED1ON")) {
            led1CB.setSelected(true);
        } else if(comandoTF.getText().equals("LED1OF")) {
            led1CB.setSelected(false);
        } else if(comandoTF.getText().equals("LED2ON")) {
            led2CB.setSelected(true);
        } else if(comandoTF.getText().equals("LED12OF")) {
            led2CB.setSelected(false);
        } else if(comandoTF.getText().equals("LED3ON")) {
            led3CB.setSelected(true);
        } else if(comandoTF.getText().equals("LED3OF")) {
            led3CB.setSelected(false);
        } else {
            JOptionPane.showMessageDialog(null, "Comando incorrecto", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_sendBActionPerformed

    private void connectBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectBActionPerformed
        // TODO add your handling code here:
        if(connectB.getText().equals("Connect")) {
            try {
                inicializarArduino(puertosSerialesCB.getItemAt(puertosSerialesCB.getSelectedIndex()));
                inicializacion(true);
                connectB.setText("Disconnect");
                sendCommand("#STAR\n");
                sendCommand("#LED1ON\n");
                sendCommand("#LED1OF\n");
                sendCommand("#LED2ON\n");
                sendCommand("#LED2OF\n");
                sendCommand("#LED3ON\n");
                sendCommand("#LED3OF\n");
            } catch (ArduinoException ex) {
                JOptionPane.showMessageDialog(null, "Puerto incorrecto", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                
                SerialPort sp = new SerialPort();
                sp.setLocationRelativeTo(this);
                this.setVisible(false);
                sp.setVisible(true);
            }
        } else {
            connectB.setText("Connect");
            inicializacion(false);
            puertosDisponibles();
            
            sendCommand("#STOP\n");
        }
    }//GEN-LAST:event_connectBActionPerformed

    private void led1CBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_led1CBItemStateChanged
        // TODO add your handling code here:
         if(led1CB.isSelected()) {
            sendCommand("#LED1ON\n");
        } else {
            sendCommand("#LED1OF\n");
        }
    }//GEN-LAST:event_led1CBItemStateChanged

    private void led2CBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_led2CBItemStateChanged
        // TODO add your handling code here:
        if(led2CB.isSelected()) {
            sendCommand("#LED2ON\n");  
        } else {
            sendCommand("#LED2OF\n");
        }
    }//GEN-LAST:event_led2CBItemStateChanged

    private void led3CBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_led3CBItemStateChanged
        // TODO add your handling code here:
        if(led3CB.isSelected()) {
            sendCommand("#LED3ON\n");   
        } else {
            sendCommand("#LED3OF\n");
        }
    }//GEN-LAST:event_led3CBItemStateChanged

    private void comandoTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comandoTFKeyTyped
        // TODO add your handling code here:   
        if(comandoTF.getText().length() > 5) {
            evt.consume();
        }
    }//GEN-LAST:event_comandoTFKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SerialPort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SerialPort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SerialPort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SerialPort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SerialPort().setVisible(true);
            }
        });
    }
    
    private void inicializacion(boolean enableDisable) {
        for(Component c : jPanelComman.getComponents()) {
            c.setEnabled(enableDisable);
        }
        
        for(Component c : jPanelLEDControl.getComponents()) {
            c.setEnabled(enableDisable);
        }
        
        puertosSerialesCB.setEnabled(!enableDisable);
    }
    
    private void puertosDisponibles() {
        String[] puertos = new String[arduino.getSerialPorts().size() + 1];
        puertos[0] = "COM1";
        
        if(!arduino.getSerialPorts().isEmpty()) {
            int i = 1;
        
            for(String s : arduino.getSerialPorts()) {
                puertos[i] = s;
                i++;
            }
        
            puertosSerialesCB.setModel(new javax.swing.DefaultComboBoxModel<>(puertos));
        }
    }
    
    private void inicializarArduino(String puerto) throws ArduinoException {
        arduino.arduinoTX(puerto, 9600);
    }
    
    private void sendCommand(String command) {
        try {
            arduino.sendData(command);
        } catch (ArduinoException ex) {
            Logger.getLogger(SerialPort.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SerialPortException ex) {
            Logger.getLogger(SerialPort.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LEDControlL;
    private javax.swing.JTextField comandoTF;
    private javax.swing.JLabel commandL;
    private javax.swing.JButton connectB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanelComman;
    private javax.swing.JPanel jPanelLEDControl;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JPanel jPanelSerialConnection;
    private javax.swing.JCheckBox led1CB;
    private javax.swing.JCheckBox led2CB;
    private javax.swing.JCheckBox led3CB;
    private javax.swing.JComboBox<String> puertosSerialesCB;
    private javax.swing.JButton sendB;
    private javax.swing.JLabel serialConectionL;
    private javax.swing.JLabel titleB;
    // End of variables declaration//GEN-END:variables
}
